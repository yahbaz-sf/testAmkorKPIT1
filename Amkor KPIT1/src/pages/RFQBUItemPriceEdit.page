<apex:page docType="html-5.0" id="pg" standardController="RFQ_Item__c" extensions="RFQBUItemPriceEditController" action="{!loadAction}">

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script type="text/javascript" src="{!$Resource.formulajs}/jstat.min.js"></script>
<script type="text/javascript" src="{!$Resource.formulajs}/lodash.min.js"></script>
<script type="text/javascript" src="{!$Resource.formulajs}/moment.min.js"></script>
<script type="text/javascript" src="{!$Resource.formulajs}/numeral.min.js"></script>
<script type="text/javascript" src="{!$Resource.formulajs}/numeric.min.js"></script>
<script type="text/javascript" src="{!$Resource.formulajs}/underscore.string.min.js"></script>
<script type="text/javascript" src="{!$Resource.formulajs}/formula.js"></script>

<!-- css hackishly overriding sf css to get pretty columns --> 
<c:RFQStyleComponent rendered="{!layout.buColumns > 3}"/>
<c:RFQItemViewStyle />

<!--Javascript to hijack the 'Assigned to' column of the approval history if it is a queue -->
<c:ApprovalQueueLink />

<script type="text/javascript">
    var inProgress = false;
    var needsReprice = false;
    
    function resetProgress() {
        inProgress = false;
    }

    function repriceClicked() {
        needsReprice = false;
        showProgress();    
    }

    function onChange(fieldAPIName,action) {
        if("BU_Price_Perc_GM__c,BU_Price__c,BU_Price_Perc_Delta_To_Target__c,Subs_Markup_Perc__c,Assembly_GM_wo_Substrate__c,Total_Cost__c".indexOf(fieldAPIName) != -1 || action=="recalc") {
            needsReprice = false;
            showProgress();  
            if (action=="recalc") recalculateFullItem();
            else recalculatePrice(fieldAPIName);
        }   
        else 
        {
            needsReprice = true;
        }    
    }

    function canApprove() {
        if(needsReprice) {
            alert('You have modified attributes and must click Reprice Item (or manually enter a BU Price, Substrate Markup, Assembly GM or Price Percent Delta Target) before you can approve this line item');
            return false;
        }
        return true;
    }

    function fieldChangeEventHook(doCallback,fieldAPIName, sObjectId, script) {
        if(doCallback) {

            if(script) {
                eval(script);
            }
            else {
                showProgress();
                onDefaultDriverChange(fieldAPIName,sObjectId);
            }
        }        
    }

    function showProgress() {
        inProgress = true;
        document.getElementById('fade').style.display='block';
    }

    function hideProgress() {
        document.getElementById('fade').style.display='none';
        inProgress = false;
    }
</script>

<script type='text/javascript'>

    function noenter(ev)  {

        if (window.event && window.event.keyCode == 13 || ev.which == 13) {
            saveItemOnly();
            return false;
        } else {
              return true;
        }
     }

</script>




<chatter:feedWithFollowers entityId="{!wrapper.rfqItem.Id}"/>
<apex:form id="form" >

    <apex:actionFunction name="recalculatePrice" action="{!reCalculatePriceById}" oncomplete="hideProgress();" reRender="output, message, multiVolume1, multiVolume2">
            <apex:param id="atrib" name="attrib" value="" assignTo="{!fieldAPIName}" />
    </apex:actionFunction>

    <apex:actionFunction name="recalculateFullItem" action="{!repriceItem}" oncomplete="hideProgress();" reRender="output, message, multiVolume1, multiVolume2">
    </apex:actionFunction>

    <apex:actionFunction name="saveItemOnly" action="{!saveItemOnly}" />

    <apex:sectionHeader title="View/Edit Attributes for this line item" subtitle="{!wrapper.rfqItem.Name}" description="On this page you can view cost/price model output and additonal data about the line item"/>
    
    <apex:pageBlock id="head">
        <apex:pageBlockSection showHeader="false" columns="4" rendered="{!layout.enabledSections['BU Header']}">
        <!-- Bhanu 25-August-2016 : Salesforce 104 -The SiP checkbox in the RFQi Header should be enabled for editing for every status below Price Complete.  start -->
            <apex:repeat value="{!layout.sectionMap['BU Header'].attributes}" var="attribute">
                <!-- <apex:outputField value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" rendered="{!attribute.objectAPIName != 'RFQ_Item__c'}"/> -->
                <!-- Lalit 10-January-2017 : Salesforce 127 - Remove Prototype checkbox from all package screens. -->
               <!--<apex:outputField value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" rendered="{!IF(AND(attribute.objectAPIName != 'RFQ_Item__c',attribute.fieldAPIName!='RFQ_Item__r.SiP__c'),TRUE,FALSE)}"/> -->
                <apex:outputField value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" rendered="{!IF(AND(attribute.objectAPIName != 'RFQ_Item__c' && attribute.fieldAPIName != 'Prototype__c' ,attribute.fieldAPIName!='RFQ_Item__r.SiP__c'),TRUE,FALSE)}"/>
                <apex:outputField value="{!wrapper.rfqItem[attribute.fieldAPIName]}" rendered="{!attribute.objectAPIName == 'RFQ_Item__c'}"/>               
            </apex:repeat>
            
            <apex:inputField value="{!wrapper.rfqItem.SiP__c}" rendered="{!wrapper.rfqItem.Status__c!='Price Complete'}"/>
            <apex:outputField value="{!wrapper.rfqItem.SiP__c}" rendered="{!wrapper.rfqItem.Status__c=='Price Complete'}"/>
            <!-- Bhanu 25-August-2016 : Salesforce 104 -The SiP checkbox in the RFQi Header should be enabled for editing for every status below Price Complete. End -->
            <!-- Lalit - 16-Mar-17 : Salesforce 193 - Add Cloned Parent field to RFQ Item header -->
            <apex:outputField value="{!wrapper.rfqItem.Original_RFQ_Item__c}" label="Cloned Parent" rendered="{!wrapper.rfqItem.Original_RFQ_Item__c != null && wrapper.rfqItem.Original_RFQ_Item__c != wrapper.rfqItem.Parent_Volume_Item__c}"/>
            <apex:outputField value="{!wrapper.rfqItem.Parent_Volume_Item__c}"  rendered="{!wrapper.rfqItem.Parent_Volume_Item__c != null}"/>
            <!-- Abhay - 11-May-2017 : Salesforce 208 - RFQI Test ONLY flow changes - Probe and Final Test -->
            <apex:outputField value="{!wrapper.rfqItem.Is_Test_Only_Business__c}"/>
        </apex:pageBlockSection> 
    </apex:pageBlock>
    
    <apex:pageMessages id="message" escape="false"/> 
    <apex:pageblock id="mainBody">
    
        <apex:pageBlockButtons >
            <!-- //Lalit - 03-Mar-2017 : Salesforce-114 :Reject change to 'Return to Sales' during BU process for RFQI ! -->
            <!--<apex:commandButton value="Approve/Reject" action="{!gotoStandardApprovalWizard}" onclick="if (inProgress) return false; inProgress = true;" oncomplete="resetProgress();" reRender="message"/>! -->
            <apex:commandButton value="Approve/Return To Sales" action="{!gotoStandardApprovalWizard}" onclick="if (inProgress) return false; inProgress = true;" oncomplete="resetProgress();" reRender="message"/>
            <!--<apex:commandButton value="Approve/Reject & Clone" action="{!gotoStandardApprovalWizardAndClone}" onclick="if (inProgress) return false; inProgress = true;" oncomplete="resetProgress();" reRender="message"/>! -->
            <apex:commandButton value="Approve/Return to Sales&Clone" action="{!gotoStandardApprovalWizardAndClone}" onclick="if (inProgress) return false; inProgress = true;" oncomplete="resetProgress();" reRender="message"/>
            <apex:commandButton value="Reload Original" action="{!reloadOriginal}" onclick="if (inProgress) return false; inProgress = true;" oncomplete="resetProgress();" reRender="message"/>
            <apex:commandButton value="Edit Attributes" action="{!editAttributes}" rendered="{!CanEditAttributes}" reRender="message"/>
             <apex:commandButton value="Import" action="{!importItem}" reRender="message"/>
            <apex:commandButton value="Reassign" action="{!reAssign}" immediate="true" rerender="message"/>
            <apex:commandButton value="Save" action="{!saveItemOnly}" reRender="message, output" onclick="if (inProgress) return false; inProgress = true;" oncomplete="resetProgress();"/>
            <apex:commandButton value="Cancel" action="{!cancelEditPrice}" immediate="true" reRender="message"/> 
            <!-- Abhay N 02-May-2017 : Salesforce 204 -19F- Added head in the reRender condition in the below line -->
            <apex:commandButton value="Reprice Item" oncomplete="hideProgress();" onclick="repriceClicked();"  action="{!repriceItem}" reRender="mainBody, message, head" rendered="{!wrapper.packageFamily.Name!='FC BGA' && wrapper.packageFamily.Name!='MEMS'}" /> 
            <!--Lalit B 09-March-2017 Salesforce-119: RePrice Item button to be removed for FcBGA package family -->
            <!-- Bharat 24-April-2017 : Salesforce 139 -Cavity MEMS Sales RFQ Item Create screens. Re-Calculate Item link to be removed for MEMS package family -->
        </apex:pageBlockButtons> 
          
        <!-- Cost and Price Section -->

        <div id="fade">
            <img id ="spinner" src="{!$Resource.ProgressBar}"/>
        </div>

        <apex:outputPanel id="output" >
            <apex:pageBlockSection id="pbsCost" title="Cost and Price" columns="1" rendered="{!layout.enabledSections['Cost and Price'] && !PostTestServiceOnlyTestType}">
            <apex:pageBlockSection columns="4" title="{!buPriceSummary}">                
                <apex:repeat value="{!layout.sectionMap['Cost and Price'].attributes}" var="attribute">
                    <apex:outputText value="" rendered="{!attribute.isBlank}" />
                    <apex:pageBlockSectionItem rendered="{!!attribute.isEditable && !attribute.isBlank}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                        <apex:outputLabel for="pfOutput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                        <apex:outputField id="pfOutput" value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" />
                         
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem rendered="{!attribute.isEditable && !attribute.isBlank}">
                        <apex:outputLabel styleClass="{!attribute.labelStyleClass}"  for="pfInput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                        <apex:inputField id="pfInput" styleClass="{!attribute.fieldAPIName} {!attribute.styleClass}" onChange="onChange('{!attribute.fieldAPIName}');" value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" onkeypress="return noenter(event);"/>
                    </apex:pageBlockSectionItem>
                    
                </apex:repeat>
                <!-- Ashish S 02-June-2017 : Salesforce 116 -Add Amkor Preferred picklist value under Factory for RFQI. -->
                <!-- Added a new Field BU Factory -->
                <apex:pageBlockSectionItem rendered="{!IF(renderFactorySection && isAttributesEditableState && showBUFactoryField, true, false)}">
                        <apex:outputLabel styleClass="customRequiredField" for="FactoryPl" value="BU Factory" />
                            <apex:selectList id="FactoryPl" size="1" value="{!wrapper.specificRfqItem['BU_Factory__c']}" onChange="fieldChangeEventHook(true,'BU_Factory__c','{!wrapper.specificRfqItem['Id']}');">
                                <apex:selectOptions value="{!BUFactoryOptions}"/>
                            </apex:selectList> 
                </apex:pageBlockSectionItem>
                
            </apex:pageBlockSection> 
            </apex:pageBlockSection>
            <apex:pageBlockSection columns="1" rendered="{!ShowRecalculateLink}">
                <apex:commandLink reRender="output, message" style="float: left; padding-left: 20px" value="Re-Calculate Item" onclick="onChange('','recalc');" rendered="{!wrapper.packageFamily.Name!='FC BGA' && wrapper.packageFamily.Name!='MEMS'}" />
                <!--Lalit B 09-March-2017 Salesforce-119: Re-Calculate Item link to be removed for FcBGA package family -->
                <!-- Bharat 24-April-2017 : Salesforce 139 -Cavity MEMS Sales RFQ Item Create screens. Re-Calculate Item link to be removed for MEMS package family -->
            </apex:pageBlockSection>
        </apex:outputPanel>

        <!-- AMK-2351, test multivolume moved to below insertion description, so do not render this section -->
        <!-- Make sure that if you make any changes to this section, you also change the multiVolume2 section below-->
        <apex:pageBlockSection id="multiVolume1" title="Additional Volume Configurations" columns="1" rendered="{!!wrapper.packageFamily.Show_Multi_Volume_Below_Description__c && wrapper.packageFamily.Show_Multi_Volume__c && !IsTestAddedServicePostTestOnly}">
            <script> if ({!wrapper.volumeList.size == 0}) twistSection(document.getElementById("{!$Component.multiVolume1}").childNodes[0].childNodes[0]); </script>
            <c:RFQMultiVolumeSection wrapper="{!wrapper}" edit="true" layout="{!layout}" builder="{!builder}" isBUPage="true" isEngineeringService="{!IsEngineeringService}" PostTestServiceOnly="{!PostTestServiceOnlyTestType}" isLayoutDeprecated="{!isLayoutDeprecated}" buPriceSummary="{!buPriceSummary}"/>
        </apex:pageBlockSection>

        <!-- BU Attributes Section -->
        <apex:outputPanel id="buAttrib" >
            <apex:pageBlockSection id="pbsBUAttrib" title="BU Attributes" columns="4" rendered="{!layout.enabledSections['BU Attributes']}">               
                <apex:repeat value="{!layout.sectionMap['BU Attributes'].attributes}" var="attribute">
                    <apex:outputField value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" rendered="{!!attribute.isEditable && !attribute.isBlank}"/>
                    <apex:inputField styleClass="{!attribute.fieldAPIName} {!attribute.styleClass}" value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" rendered="{!attribute.isEditable && !attribute.isBlank}" onkeypress="return noenter(event);"/>
                </apex:repeat> 
            </apex:pageBlockSection>
        </apex:outputPanel>


        <!-- Package Description Section -->
        <apex:pageBlockSection title="{!projectDesc}"  columns="4" rendered="{!layout.enabledSections['Package Description'] }">
            <apex:repeat value="{!layout.sectionMap['Package Description'].attributes}" var="attribute">
                <apex:outputField value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" rendered="{!IF(attribute.isManualEntry, IF(wrapper.specificRfqItem[attribute.fieldAPIName] != null, IF(attribute.dataType == 'Decimal' && wrapper.specificRfqItem[attribute.fieldAPIName] > 0, true, false), false), true)}"/>
                <apex:inputField value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!wrapper.specificRfqItem['Id']}');" rendered="{!attribute.isManualEntry && (wrapper.specificRfqItem[attribute.fieldAPIName] == null ||(attribute.dataType == 'Decimal' && wrapper.specificRfqItem[attribute.fieldAPIName] != null && wrapper.specificRfqItem[attribute.fieldAPIName] <= 0) )}" styleClass="{!attribute.fieldAPIName} {!attribute.styleClass}" onkeypress="return noenter(event);"/>
            </apex:repeat>              
            <apex:outputField value="{!wrapper.specificRfqItem['Factory__c']}" rendered="{!renderFactorySection}" />
            <!-- Ashish 02-June-2017 : Salesforce 116 -Add Amkor Preferred picklist value under Factory for RFQI. -->
                <apex:outputField value="{!wrapper.rfqItem['Final_Factory__c']}" rendered="{!IF(renderFactorySection,true,false)}" />
            
        </apex:pageBlockSection>

        <!-- CPN Drivers section -->
        <apex:pageBlockSection title="CPN Drivers" columns="{!layout.BUColumns}" rendered="{!layout.enabledSections['CPN Drivers']}">
            <apex:repeat value="{!layout.sectionMap['CPN Drivers'].attributes}" var="attribute">
                <apex:outputField value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" rendered="{!!attribute.isManualEntry}"/>
                <apex:inputField value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" rendered="{!attribute.isManualEntry}" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!wrapper.specificRfqItem['Id']}');" styleClass="{!attribute.fieldAPIName} {!attribute.styleClass}" onkeypress="return noenter(event);"/>
            </apex:repeat>  
        </apex:pageBlockSection>

        <!-- Substrate Description Section -->
        <apex:outputPanel layout="block" styleClass="oneColumnHack">
                <apex:pageBlockSection title="Substrate Description" id="substrateSection" columns="{!layout.buColumns}" rendered="{!layout.enabledSections['Substrate Description']}" > 
                    <!-- Bharat 26-June-2017 : Salesforce 139 -Cavity MEMS Sales RFQ Item Create screens. -->
                    <!-- Consigned field not required in substrate description section for package family MEMS -->
                    <apex:outputField value="{!wrapper.rfqItem.Consigned__c}" rendered="{! wrapper.packageFamily.Name!='MEMS'}" />
                    <apex:repeat value="{!layout.sectionMap['Substrate Description'].attributes}" var="attribute">
                        <apex:outputField value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" rendered="{!CanEditFlipChipSubstrate}"/>
                        <apex:inputField value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" rendered="{!!CanEditFlipChipSubstrate}"/>
                    </apex:repeat>
                </apex:pageBlockSection>
        </apex:outputPanel>
        <!-- <apex:pageBlockSection title="Substrate Description" columns="{!layout.BUColumns}" rendered="{!layout.enabledSections['Substrate Description']}">
            <apex:repeat value="{!layout.sectionMap['Substrate Description'].attributes}" var="attribute">
                <apex:outputField value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}"/>
            </apex:repeat>  
        </apex:pageBlockSection> -->

        <!-- Wire Description Section -->
        <apex:pageBlockSection title="Wire Description" id="wireSection" columns="1" rendered="{!layout.enabledSections['Wire Description']}">
            <apex:repeat value="{!wrapper.wireConfigurations}"  var="wireConfiguration">    
                <apex:pageBlockSection columns="4">
                    <!-- <apex:repeat value="{!layout.sectionMap['Wire Description'].attributes}" var="attribute"> -->
                    <apex:repeat value="{!wrapper.childObjectSections[wireConfiguration.Id].attributes}" var="attribute">
                        <apex:outputField value="{!wireConfiguration[attribute.fieldAPIName]}" rendered="{!IF(attribute.isManualEntry, IF(wireConfiguration[attribute.fieldAPIName] != null, IF(attribute.dataType == 'Decimal' && wireConfiguration[attribute.fieldAPIName] > 0, true, false), false), true)}"/>
                        <apex:inputField value="{!wireConfiguration[attribute.fieldAPIName]}" rendered="{!attribute.isManualEntry && (wireConfiguration[attribute.fieldAPIName] == null ||(attribute.dataType == 'Decimal' && wireConfiguration[attribute.fieldAPIName] != null && wireConfiguration[attribute.fieldAPIName] <= 0) )}" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!wireConfiguration['Id']}');" styleClass="{!attribute.fieldAPIName} {!attribute.styleClass}" onkeypress="return noenter(event);"/>
                    </apex:repeat>
                </apex:pageBlockSection>  
            </apex:repeat>
        </apex:pageBlockSection>
        
        <!-- Die Description Section -->
        <apex:pageBlockSection title="Die Description" id="dieSection" columns="1" rendered="{!layout.enabledSections['Die Description'] }">
            <apex:pageMessage summary="{!dieConfigMessage}" severity="info"/>
            <apex:repeat value="{!wrapper.dieConfigurations}"  var="dieConfiguration">    
                <apex:pageBlockSection columns="4">
                    <!-- <apex:repeat value="{!layout.sectionMap['Die Description'].attributes}" var="attribute"> -->
                    <apex:repeat value="{!wrapper.childObjectSections[dieConfiguration.Id].attributes}" var="attribute">
                        <apex:outputField value="{!dieConfiguration[attribute.fieldAPIName]}" rendered="{!IF(attribute.isManualEntry, IF(dieConfiguration[attribute.fieldAPIName] != null, IF(attribute.dataType == 'Decimal' && dieConfiguration[attribute.fieldAPIName] > 0, true, false), false), true)}"/>
                        <apex:inputField value="{!dieConfiguration[attribute.fieldAPIName]}" rendered="{!attribute.isManualEntry && (dieConfiguration[attribute.fieldAPIName] == null ||(attribute.dataType == 'Decimal' && dieConfiguration[attribute.fieldAPIName] != null && dieConfiguration[attribute.fieldAPIName] <= 0) )}" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!dieConfiguration['Id']}');" styleClass="{!attribute.fieldAPIName} {!attribute.styleClass}" onkeypress="return noenter(event);"/>
                    </apex:repeat>
                </apex:pageBlockSection>  
            </apex:repeat>
        </apex:pageBlockSection>
       
        <!-- Passive Description -->
        <!-- Bharat 24-April-2017 : Salesforce 139 -Cavity MEMS Sales RFQ Item Create screens. -->
        <!-- PageBlockSection title is made dynamic -->
        <apex:pageBlockSection title="{!sectionTitle}" id="passiveSection" columns="1" rendered="{!layout.enabledSections['Passive Description']}" >
            <apex:repeat value="{!wrapper.passiveConfigurations}"  var="passiveConfiguration">
                 <apex:pageBlockSection columns="{!layout.buColumns}">
                     <!-- <apex:repeat value="{!layout.sectionMap['Passive Description'].attributes}" var="attribute"> -->
                     <apex:repeat value="{!wrapper.childObjectSections[passiveConfiguration.Id].attributes}" var="attribute">
                         <apex:outputField value="{!passiveConfiguration[attribute.fieldAPIName]}" rendered="{!IF(attribute.isManualEntry, IF(passiveConfiguration[attribute.fieldAPIName] != null, IF(attribute.dataType == 'Decimal' && passiveConfiguration[attribute.fieldAPIName] > 0, true, false), false), true)}"/>
                         <apex:inputField value="{!passiveConfiguration[attribute.fieldAPIName]}" rendered="{!attribute.isManualEntry && (passiveConfiguration[attribute.fieldAPIName] == null ||(attribute.dataType == 'Decimal' && passiveConfiguration[attribute.fieldAPIName] != null && passiveConfiguration[attribute.fieldAPIName] <= 0) )}" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!passiveConfiguration['Id']}');" styleClass="{!attribute.fieldAPIName} {!attribute.styleClass}" onkeypress="return noenter(event);"/>
                     </apex:repeat>
                 </apex:pageBlockSection>
            </apex:repeat>
        </apex:pageBlockSection>
        
        <!-- Insertion Description -->
        <apex:pageBlockSection title="Test Configuration Summary" id="insertionSection" columns="1" rendered="{!layout.enabledSections['Insertion Description'] && !PostTestServiceOnlyTestType}" >
            <apex:repeat value="{!wrapper.wpInsertConfs}"  var="insertionConfiguration">
                <apex:pageBlockSection columns="1" title="Test Configuration Detail #{!insertionConfiguration.index}">
                 <apex:pageBlockSection columns="{!layout.buColumns}">
                     <!-- <apex:repeat value="{!layout.sectionMap['Insertion Description'].attributes}" var="attribute"> -->
                     <apex:repeat value="{!wrapper.childObjectSections[insertionConfiguration.conf.Id].attributes}" var="attribute">
                         <apex:outputField value="{!insertionConfiguration.conf[attribute.fieldAPIName]}" rendered="{!!attribute.isManualEntry && attribute.belongsToSubSection == 'Plant Information'}"/>
                         <apex:inputField value="{!insertionConfiguration.conf[attribute.fieldAPIName]}" rendered="{!attribute.isManualEntry && attribute.belongsToSubSection == 'Plant Information'}" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!insertionConfiguration.conf['Id']}');" styleClass="{!attribute.fieldAPIName} {!attribute.styleClass}" onkeypress="return noenter(event);"/>
                     </apex:repeat>
                     <apex:pageBlockSectionItem >
                        <apex:outputLabel value="" />
                        <apex:outputText value=""/>
                    </apex:pageBlockSectionItem>
                 </apex:pageBlockSection>
                 <hr/>
                 <apex:pageBlockSection columns="{!layout.buColumns}">
                     <!-- <apex:repeat value="{!layout.sectionMap['Insertion Description'].attributes}" var="attribute"> -->
                     <apex:repeat value="{!wrapper.childObjectSections[insertionConfiguration.conf.Id].attributes}" var="attribute">
                         <apex:outputField value="{!insertionConfiguration.conf[attribute.fieldAPIName]}" rendered="{!!attribute.isManualEntry && attribute.belongsToSubSection == 'Tester Information'}"/>
                         <apex:inputField value="{!insertionConfiguration.conf[attribute.fieldAPIName]}" rendered="{!attribute.isManualEntry && attribute.belongsToSubSection == 'Tester Information'}" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!insertionConfiguration.conf['Id']}');" styleClass="{!attribute.fieldAPIName} {!attribute.styleClass}" onkeypress="return noenter(event);"/>
                     </apex:repeat>
                 </apex:pageBlockSection>
                 <hr/>
                 <apex:pageBlockSection columns="{!layout.buColumns}">
                     <!-- <apex:repeat value="{!layout.sectionMap['Insertion Description'].attributes}" var="attribute"> -->
                     <apex:repeat value="{!wrapper.childObjectSections[insertionConfiguration.conf.Id].attributes}" var="attribute">
                         <apex:outputField value="{!insertionConfiguration.conf[attribute.fieldAPIName]}" rendered="{!!attribute.isManualEntry && attribute.belongsToSubSection == 'Handler Information'}"/>
                         <apex:inputField value="{!insertionConfiguration.conf[attribute.fieldAPIName]}" rendered="{!attribute.isManualEntry && attribute.belongsToSubSection == 'Handler Information'}" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!insertionConfiguration.conf['Id']}');" styleClass="{!attribute.fieldAPIName} {!attribute.styleClass}" onkeypress="return noenter(event);"/>
                     </apex:repeat>
                 </apex:pageBlockSection>
                 <hr/>
                 <apex:pageBlockSection id="testConfigSection" columns="{!layout.buColumns}" rendered="{!layout.enabledSections['Minimum Tester Configuration']}" >
                    <apex:repeat value="{!layout.sectionMap['Minimum Tester Configuration'].attributes}" var="testerAttribute">
                        <apex:pageBlockSectionItem rendered="{!!testerAttribute.isManualEntry}">
                            <apex:outputLabel for="pfOutput" value="{!$ObjectType[testerAttribute.objectAPIName].fields[testerAttribute.fieldAPIName].Label}" />
                            <apex:outputField id="pfOutput"  value="{!insertionConfiguration.conf[testerAttribute.fieldAPIName]}"/>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem rendered="{!testerAttribute.isManualEntry}">
                            <apex:outputLabel for="pfOutput" value="{!$ObjectType[testerAttribute.objectAPIName].fields[testerAttribute.fieldAPIName].Label}" />
                            <apex:inputField id="pfOutput"  value="{!insertionConfiguration.conf[testerAttribute.fieldAPIName]}"/>
                        </apex:pageBlockSectionItem>
                    </apex:repeat>
                </apex:pageBlockSection>
                <hr/>
                <apex:pageBlockSection id="insertionCost" columns="4" rendered="{!layout.enabledSections['Insertion Cost and Price']}">               
                <apex:outputText value="{!wrapper.specificRfqItem['Forecast__c']}" />
                <apex:repeat value="{!layout.sectionMap['Insertion Cost and Price'].attributes}" var="attribute">
                    <apex:outputText value="" rendered="{!attribute.isBlank}" />
                    <apex:outputField value="{!insertionConfiguration.conf[attribute.fieldAPIName]}" rendered="{!!attribute.isEditable && !attribute.isBlank}"/>
                    <apex:inputField styleClass="{!attribute.labelStyleClass}" required="{!attribute.isRequired}" onChange="onChange('{!attribute.fieldAPIName}');" value="{!insertionConfiguration.conf[attribute.fieldAPIName]}" rendered="{!attribute.isEditable && !attribute.isBlank}" onkeypress="return noenter(event);"/>
                </apex:repeat> 
            </apex:pageBlockSection>
            <apex:pageBlockSection columns="1">
                <!-- Abhay N 02-May-2017 : Salesforce 204 -19F- Added head in the reRender condition in the below line -->
                <apex:commandLink reRender="mainBody, output, message, head" style="float: left; padding-left: 20px; height:auto; font-size: 1.3em" value="Reprice Item" oncomplete="hideProgress();" onclick="repriceClicked();"  action="{!repriceItem}" />
            </apex:pageBlockSection>
            </apex:pageBlockSection>
            </apex:repeat>
        </apex:pageBlockSection>

        <!-- Service Description -->
        <apex:pageBlockSection title="Service Description" id="serviceSection" columns="1" rendered="{!layout.enabledSections['Service Description']}" >
            <apex:repeat value="{!wrapper.serviceConfigurations}"  var="serviceConfiguration">
                 <apex:pageBlockSection columns="{!layout.buColumns}">
                     <!-- <apex:repeat value="{!layout.sectionMap['Insertion Description'].attributes}" var="attribute"> -->
                     <apex:repeat value="{!wrapper.childObjectSections[serviceConfiguration.Id].attributes}" var="attribute">
                         <!-- <apex:outputField value="{!serviceConfiguration[attribute.fieldAPIName]}" /> -->
                         <apex:outputField value="{!serviceConfiguration[attribute.fieldAPIName]}" rendered="{!!attribute.isManualEntry}"/>
                         <apex:inputField value="{!serviceConfiguration[attribute.fieldAPIName]}" rendered="{!attribute.isManualEntry}" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!serviceConfiguration['Id']}');" styleClass="{!attribute.fieldAPIName} {!attribute.styleClass}" onkeypress="return noenter(event);"/>
                     </apex:repeat>
                     <apex:inputField value="{!serviceConfiguration['Sub_Total__c']}" onChange="fieldChangeEventHook(true,'Sub_Total__c','{!serviceConfiguration['Id']}');" onkeypress="return noenter(event);" style="background-color: #CCFFFF;"/>
                 </apex:pageBlockSection>
            </apex:repeat>
        </apex:pageBlockSection>

        <!-- Make sure that if you make any changes to this section, you also change the multiVolume1 section above-->
        <apex:pageBlockSection id="multiVolume2" title="Additional Volume Configurations" columns="1" rendered="{!wrapper.packageFamily.Show_Multi_Volume_Below_Description__c && wrapper.packageFamily.Show_Multi_Volume__c && !IsTestAddedServicePostTestOnly}">
            <script> if ({!wrapper.volumeList.size == 0}) twistSection(document.getElementById("{!$Component.multiVolume2}").childNodes[0].childNodes[0]); </script>
            <c:RFQMultiVolumeSection wrapper="{!wrapper}" edit="true" layout="{!layout}" builder="{!builder}" isBUPage="true" isEngineeringService="{!IsEngineeringService}" PostTestServiceOnly="{!PostTestServiceOnlyTestType}" isLayoutDeprecated="{!isLayoutDeprecated}" buPriceSummary="{!buPriceSummary}"/>
        </apex:pageBlockSection>

         <!-- Post Test Services BU Price to Sales -->
        <apex:pageBlockSection id="ptsCost" title="Post Test Services BU Price to Sales" columns="1" rendered="{!layout.enabledSections['Post Test Services Cost and Price']}">

            <apex:pageBlockSection columns="{!layout.buColumns}" >               
                <apex:repeat value="{!layout.sectionMap['Post Test Services Cost and Price'].attributes}" var="attribute">
                    <apex:outputText value="" rendered="{!attribute.isBlank}" />
                    <apex:outputField value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" rendered="{!!attribute.isEditable && !attribute.isBlank}"/>
                    <apex:pageBlockSectionItem rendered="{!attribute.isEditable && !attribute.isBlank}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                        <apex:outputLabel styleClass="{!attribute.labelStyleClass}" for="postInput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                        <apex:inputField onChange="onChange('{!attribute.fieldAPIName}');" id="postInput" value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" onkeypress="return noenter(event);" styleClass="{!attribute.fieldAPIName} {!attribute.styleClass}" />
                    </apex:pageBlockSectionItem>
                </apex:repeat> 
            </apex:pageBlockSection>

        <apex:pageBlockSection rendered="{!PostTestServiceOnlyTestType}" columns="{!layout.salesColumns}"> 
                <apex:outputText value="{!wrapper.specificRfqItem['BU_Post_Test_Price_Unit__c']}"/>
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="" />
                    <apex:outputText value=""/>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="" />
                    <apex:outputText value=""/>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="" />
                    <apex:outputText value=""/>
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>

        </apex:pageBlockSection>
        
        <!-- Adder Section -->
        <apex:pageBlockSection title="Adders" columns="4" rendered="{!layout.enabledSections['Adders']}">
            <apex:repeat value="{!layout.sectionMap['Adders'].attributes}" var="attribute">
                <apex:outputField value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}"/>
            </apex:repeat>  
        </apex:pageBlockSection>

        <!-- Post Test Services Section -->
        <apex:pageBlockSection title="Post Test Services" columns="1" rendered="{!layout.enabledSections['Post Test Services'] && !isLayoutDeprecated && !IsWaferTestType}">
            <apex:pageBlockSection rendered="{!PostTestServiceOnlyTestType}" columns="{!layout.salesColumns}"> 
                <apex:outputText value="{!wrapper.specificRfqItem['Post_Test_Factory__c']}"/>
                <apex:pageBlockSectionItem >
                            <apex:outputLabel value="" />
                            <apex:outputText value=""/>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="" />
                            <apex:outputText value=""/>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="" />
                            <apex:outputText value=""/>
                        </apex:pageBlockSectionItem>
            </apex:pageBlockSection> 
            <apex:pageBlockSection columns="{!layout.BUColumns}">
            <apex:repeat value="{!layout.sectionMap['Post Test Services'].attributes}" var="attribute">
                <apex:outputField value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}"/>
            </apex:repeat>  
            </apex:pageBlockSection>
            <!-- Post Test Services Burn In Subsection -->
            <apex:pageBlockSection columns="{!layout.BUColumns}" rendered="{!layout.enabledSections['Post Test Services Burn In'] && !isLayoutDeprecated}">
            <apex:repeat value="{!layout.sectionMap['Post Test Services Burn In'].attributes}" var="attribute">
                <apex:outputField value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}"/>                
            </apex:repeat>
            </apex:pageBlockSection>
            <!-- Post Test Services Prices Subsection -->
            <apex:pageBlockSection columns="{!layout.BUColumns}" rendered="{!layout.enabledSections['Post Test Services Prices'] && !isLayoutDeprecated}">
            <apex:repeat value="{!layout.sectionMap['Post Test Services Prices'].attributes}" var="attribute">
                <apex:outputField value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}"/>                
            </apex:repeat>
            </apex:pageBlockSection>
        </apex:pageBlockSection>

        <!-- Post Test Services Section for Wafer Probe -->
         <apex:pageBlockSection title="Post Test Services" columns="{!layout.BUColumns}" rendered="{!layout.enabledSections['Post Test Services - Wafer Probe'] && !isLayoutDeprecated && IsWaferTestType}">
            <apex:repeat value="{!layout.sectionMap['Post Test Services - Wafer Probe'].attributes}" var="attribute">
                <apex:outputField value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}"/>
            </apex:repeat>  
            </apex:pageBlockSection>
       
        <!-- NRE Section -->
        <apex:outputPanel id="nreSection" layout="block" styleClass="oneColumnHack">
            <apex:pageBlockSection title="NRE" columns="2" >
                <apex:inputField value="{!wrapper.rfqItem.NRE_Inclusion__c}" onkeypress="return noenter(event);">
                    <apex:actionSupport event="onchange" rerender="nreSection"/> 
                </apex:inputField>
            </apex:pageBlockSection>

            <apex:pageBlockSection rendered="{!showNREAttributes}" columns="1">
            <apex:pageBlockSection columns="2">
                <apex:outputText value="NRE Description:" style="float:right; font-weight: bold;"/>
                <apex:outputText value="$NRE Value:" style="float:left; font-weight: bold;"/>
            </apex:pageBlockSection>

            <apex:pageBlockSection columns="1" rendered="{!layout.enabledSections['NRE']}">
                <apex:repeat value="{!layout.sectionMap['NRE'].attributes}" var="attribute" >
                    <apex:outputField rendered="{!!isBuNreEditableState}" value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" />
                    <apex:inputField rendered="{!isBuNreEditableState}" style="{!IF(attribute.isDefaultDriver,'background-color: #CCFFFF','')}; " value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" required="{!attribute.isRequired}" onkeypress="return noenter(event);"/>
                </apex:repeat> 
            </apex:pageBlockSection> 

                <apex:repeat value="{!wrapper.nreConfigurations}"  var="nreConfiguration">  
                    <apex:pageBlockSection columns="2">
                        <apex:outputText value="{!nreConfiguration['Description__c']}" style="float:right;"  label="" rendered="{!!isBuNreEditableState}"/>
                        <apex:outputText value="{!nreConfiguration['Price_New__c']}" style="float:left;"  label="" rendered="{!!isBuNreEditableState}"/>  
                        <apex:inputtext value="{!nreConfiguration['Description__c']}" style="float:right;"  label="" rendered="{!isBuNreEditableState}"/>
                        <apex:inputField value="{!nreConfiguration['Price_New__c']}" style="float:left;"  label="" rendered="{!isBuNreEditableState}"/>  
                    </apex:pageBlockSection>
                    <apex:commandLink id="removeNRELink" value="Remove NRE Other" action="{!removeNREConfigurationById}" reRender="nreSection" onclick="if (inProgress) return false; inProgress = true;" oncomplete="resetProgress();">
                        <apex:param name="nreConfigId" value="{!nreConfiguration.Id}"/>
                    </apex:commandLink>
                </apex:repeat>
            </apex:pageBlockSection>

            <apex:pageBlockSection showHeader="false" columns="2" id="nreCommandPbs" rendered="{!isBuNreEditableState && showNREAttributes}">
                <apex:commandButton value="Add NRE Other" action="{!addNREConfiguration}" reRender="nreSection,messages" onclick="showProgress();" oncomplete="hideProgress();"/>
            </apex:pageBlockSection>
        </apex:outputPanel>

        <apex:pageBlockSection title="Additional Information" rendered="{!layout.enabledSections['Additional Information'] && !isLayoutDeprecated}" columns="1">
            <apex:repeat value="{!layout.sectionMap['Additional Information'].attributes}" var="attribute">
                <apex:outputText value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" label=""/>
            </apex:repeat>
        </apex:pageBlockSection>
        
        <apex:pageBlockSection title="Cost Model Reference" columns="1" rendered="true">
           
            <c:CMFCMDisplay fcmB="{!builder}" isEditMode="true" noCM="{!noCostModel}" rendered="{!(cmType == 'CMMLFBuilder' || cmType == 'CMDualBuilder' || cmType == 'CMQuadBuilder' || cmType == 'CMFCBuilder')}"/>
            <c:CMPBGADisplay pbgaB="{!builder}" rendered="{!(cmType == 'CMPBGABuilder')}"/>
            <!--<c:CMFCDisplay fcB="{!builder}" rendered="{!(cmType == 'CMFCBuilder')}"/>-->
            <c:CMCABGADisplay cabgaB="{!builder}" rendered="{!(cmType == 'CMCABGABuilder' || cmType == 'CMSCSPBuilder')}"/>                                                
            <c:CMOthersDisplay othersB="{!builder}" rendered="{!(cmType == 'CMOthersBuilder')}"/>
            <c:CMDefaultDisplay defaultB="{!builder}" rendered="{!(cmType == 'CMDefaultBuilder')}"/>

        </apex:pageBlockSection>

        <c:RFQIDeprecatedSectionEditPage wrapper="{!wrapper}" theLayout="{!layout}" renderFactorySection="{!renderFactorySection}" columns="1" buPage="true" rendered="{!isLayoutDeprecated}"/>


         <apex:actionFunction name="onDefaultDriverChange" action="{!onDefaultDriverChange}" reRender="output" oncomplete="hideProgress();">
            <apex:param name="fieldName" value="" />
            <apex:param name="objectId" value="" />
        </apex:actionFunction>


    </apex:pageblock>
</apex:form>
    
<!--Approval History -->

<div class="noAction">
<apex:relatedList subject="{!wrapper.rfqItem.Id}" list="ProcessSteps" >
    <apex:facet name="header"><table><tr><td class="pbTitle"><h3>Approval History</h3></td></tr></table></apex:facet> 
</apex:relatedList>

<apex:form >
    <apex:pageBlock title="Similar RFQ Items" >
        <apex:pageBlockButtons location="top" >
                <apex:commandButton rendered="{!relatedItemsVisible}" style="height: 20px" styleClass="bRelatedList" value="Advanced Search" action="{!viewRelatedItemsAdvanced}" />
        </apex:pageBlockButtons>

        <apex:outputPanel rendered="{!relatedItemsVisible}">
            <c:RFQItemRelatedItemList relatedItems="{!relatedItems}" />
        </apex:outputPanel>
        
        <apex:outputPanel rendered="{!IF(relatedItemsVisible,false,true)}">
            <i>No other items were found with the same CPN in a 'Production Win' or 'Program Win Closed' status</i>
        </apex:outputPanel>
        
    </apex:pageBlock>
</apex:form>

</div>

</apex:page>