<apex:page docType="html-5.0" standardController="RFQ_Item__c" extensions="RFQItemEditController" action="{!loadAction}">

<c:RFQItemViewStyle />

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script type="text/javascript" src="{!$Resource.formulajs}/jstat.min.js"></script>
<script type="text/javascript" src="{!$Resource.formulajs}/lodash.min.js"></script>
<script type="text/javascript" src="{!$Resource.formulajs}/moment.min.js"></script>
<script type="text/javascript" src="{!$Resource.formulajs}/numeral.min.js"></script>
<script type="text/javascript" src="{!$Resource.formulajs}/numeric.min.js"></script>
<script type="text/javascript" src="{!$Resource.formulajs}/underscore.string.min.js"></script>
<script type="text/javascript" src="{!$Resource.formulajs}/formula.js"></script>

<script type="text/javascript">
    var inProgress = false;
    function resetProgress() {
        inProgress = false;
    }
    
    function get(apiName) {
        return document.getElementsByClassName(apiName)[0].value;
    }

    function set(apiName, value) {
        var elements = document.getElementsByClassName(apiName);
        for(var i = 0; i < elements.length; i++) {
            
            if(elements[i].hasOwnProperty('checked')){
                 elements[i].checked = value;
            }
            else {
                elements[i].value = value;
            }
            
        }

    }

    function fieldChangeEventHook(doCallback,fieldAPIName, sObjectId, script) {
        if(doCallback) {

            if(script) {
                eval(script);
            }
            else {
                showProgress();
                onDefaultDriverChange(fieldAPIName,sObjectId);
            }
        }        
    }

    function showProgress() {
        document.getElementById('fade').style.display='block';
    }

    function hideProgress() {
        document.getElementById('fade').style.display='none';

    }

    $(function() {
        editDualLeadframeWireMaterial();
    });

    function editDualLeadframeWireMaterial()
    {
        if ({!editDualLeadframeWireMaterial})
        {
            $('.Wire_Material__c').children('option').each(function () {
                console.log(this);
                if(this.value == "Cu") this.remove();
            });
        }   
    }
</script>


<apex:form id="form" >
    <apex:sectionHeader title="View/Edit Attributes for this line item" subtitle="{!wrapper.rfqItem.Name}" description="On this page you can view or edit the attributes of this line items and request or escalate pricing"/>

    <div id="fade">
        <img id ="spinner" src="{!$Resource.ProgressBar}"/>
    </div>
    <apex:pageBlock id="head">
    
        <apex:pageBlockSection showHeader="false" columns="2" rendered="{!layout.enabledSections['Sales Header']}">
           <!-- Bhanu 19-August-2016 : Salesforce 104 -The SiP checkbox in the RFQi Header should be enabled for editing for every status below Price Complete. -->
            <apex:repeat value="{!layout.sectionMap['Sales Header'].attributes}" var="attribute">
                <apex:outputField value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" rendered="{!attribute.fieldAPIName!='RFQ_Item__r.SiP__c'}"/>
            </apex:repeat>

            <apex:outputField value="{!wrapper.rfqItem.Opportunity__c}"/>
            <apex:inputField value="{!wrapper.rfqItem.SiP__c}" rendered="{!wrapper.rfqItem.Status__c!='Price Complete'}"/>
            <apex:outputField value="{!wrapper.rfqItem.SiP__c}" rendered="{!wrapper.rfqItem.Status__c=='Price Complete'}"/>
            <!-- Lalit - 16-Mar-17 : Salesforce 193 - Add Cloned Parent field to RFQ Item header -->
            <apex:outputField value="{!wrapper.rfqItem.Original_RFQ_Item__c}" label="Cloned Parent" rendered="{!wrapper.rfqItem.Original_RFQ_Item__c != null && wrapper.rfqItem.Original_RFQ_Item__c != wrapper.rfqItem.Parent_Volume_Item__c}"/>
            <apex:outputField value="{!wrapper.rfqItem.Parent_Volume_Item__c}"  rendered="{!wrapper.rfqItem.Parent_Volume_Item__c != null}"/>
            <!-- Abhay - 11-May-2017 : Salesforce 208 - RFQI Test ONLY flow changes - Probe and Final Test -->
            <apex:outputField value="{!wrapper.rfqItem.Is_Test_Only_Business__c}"/>
        </apex:pageBlockSection>
    </apex:pageBlock>
    
    <apex:pageMessages id="messages" escape="false" />
    <apex:pageblock id="mainBody">
        <apex:pageBlockButtons >
            <apex:commandButton value="Save" rendered="{!ShowPriceToCustomerSave}"  action="{!saveItem}" reRender="messages"/>
            <apex:commandButton value="Save as Draft" rendered="{!showDraftButton}"  action="{!saveItemAsDraft}" reRender="messages"/>
            <apex:commandButton value="Save as Ready" rendered="{!IsSubmitableState}" action="{!saveItemAsReady}" reRender="messages"/>
            <apex:commandButton value="Save and Clone" rendered="{!IsSubmitableState}" action="{!saveItemAndClone}" reRender="messages"/>
            <!--Lalit - 06-April-2017 : Salesforce-114 : Reject change to 'Return to Sales' during BU process for RFQI Submit button visiblity based upon status.-->
            <!--<apex:commandButton value="Submit" action="{!submitItem}" rendered="{!IsSubmitableState}" onclick="if (inProgress) return false; inProgress = true;" oncomplete="resetProgress();" reRender="messages, output"/>-->
            <apex:commandButton value="Submit" action="{!submitItem}" rendered="{!OR(IsSubmitableState, wrapper.rfqItem.Status__c = 'Returned To Sales')}" onclick="if (inProgress) return false; inProgress = true;" oncomplete="resetProgress();" reRender="messages, output"/>
            <apex:commandButton immediate="true" value="Restore Defaults" action="{!reloadOriginal}" rendered="{!IsReloadPossible}" onclick="if (inProgress) return false; inProgress = true;" oncomplete="resetProgress();" reRender="messages, output"/>
            <apex:commandButton immediate="true" value="Cancel" action="{!cancelItem}" onclick="if (inProgress) return false; inProgress = true;" oncomplete="resetProgress();"/>
        </apex:pageBlockButtons> 
          
        <apex:outputPanel id="output" >
            <!-- Quote Information Section -->
            <apex:pageBlockSection title="Quote Information" columns="1" rendered="{!layout.enabledSections['Quote Information']}">
                <apex:pageBlockSection columns="{!layout.salesColumns}">
                <apex:repeat value="{!layout.sectionMap['Quote Information'].attributes}" var="attribute">
                    <apex:pageBlockSectionItem rendered="{!attribute.isEditable && attribute.rendered && attribute.objectAPIName != 'RFQ_Item__c'}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                        <apex:outputLabel styleClass="{!attribute.labelStyleClass}"  for="pfInput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                        <apex:inputField id="pfInput" label="" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!wrapper.specificRfqItem['Id']}');" value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" styleClass="{!attribute.fieldAPIName} {!attribute.styleClass}"/>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem rendered="{!!attribute.isEditable && attribute.objectAPIName != 'RFQ_Item__c'}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                         <apex:outputLabel for="pfOutput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                         <apex:outputField id="pfOutput"  value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" rendered="{!attribute.objectAPIName != 'RFQ Item'}"/>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem rendered="{!attribute.isEditable && attribute.rendered && attribute.objectAPIName == 'RFQ_Item__c'}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                        <apex:outputLabel styleClass="{!attribute.labelStyleClass}"  for="pfInput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                        <apex:inputField id="pfInput" label="" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!wrapper.specificRfqItem['Id']}');" value="{!wrapper.rfqItem[attribute.fieldAPIName]}" styleClass="{!attribute.fieldAPIName} {!attribute.styleClass}"/>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem rendered="{!!attribute.isEditable && attribute.objectAPIName == 'RFQ_Item__c'}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                         <apex:outputLabel for="pfOutput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                         <apex:outputField id="pfOutputItem"  value="{!wrapper.rfqItem[attribute.fieldAPIName]}" /> 
                    </apex:pageBlockSectionItem>                          
                </apex:repeat>
                <!-- <apex:pageBlockSectionItem rendered="{!attribute.fieldAPIName != 'RFQ_Item__r.HVP_Anticipated_Start_Date__c' && attribute.isEditable}" >
                    <apex:inputField value="{!wrapper.specificRfqItem['RFQ_Item__r.HVP_Anticipated_Start_Date__c']}"/>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem rendered="{!attribute.fieldAPIName != 'RFQ_Item__r.HVP_Anticipated_Start_Date__c' && !attribute.isEditable}" >
                    <apex:outputField value="{!wrapper.specificRfqItem['RFQ_Item__r.HVP_Anticipated_Start_Date__c']}"/>
                </apex:pageBlockSectionItem> -->

                </apex:pageBlockSection>
            <apex:pageBlockSection id="quoteInfoPrices" columns="{!layout.salesColumns}" rendered="{!layout.enabledSections['Quote Information Prices']}" > 
                <apex:repeat value="{!layout.sectionMap['Quote Information Prices'].attributes}" var="attribute">
                    <apex:pageBlockSectionItem rendered="{!attribute.isEditable && attribute.rendered}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                    <apex:outputLabel styleClass="{!attribute.labelStyleClass}"  for="pfInput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                    <apex:inputField id="pfInput" label="" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!wrapper.specificRfqItem['Id']}');" value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" styleClass="{!attribute.fieldAPIName} {!attribute.styleClass}"/>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem rendered="{!!attribute.isEditable}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                     <apex:outputLabel for="pfOutput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                     <apex:outputField id="pfOutput"  value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}"/>
                </apex:pageBlockSectionItem>
                </apex:repeat>
            </apex:pageBlockSection>           
            </apex:pageBlockSection>

            <apex:pageBlockSection id="multiVolume" title="Additional Volume Configurations" columns="1">
                <c:RFQMultiVolumeSection wrapper="{!wrapper}" edit="true" layout="{!layout}" builder="{!builder}" isEngineeringService="{!IsEngineeringService}"/>
                <!--<apex:dynamicComponent componentValue="{!MultiVolumeSection}" />-->
            </apex:pageBlockSection>
    
            <!-- Package Section -->
            <apex:pageBlockSection title="{!projectDesc}" columns="{!layout.salesColumns}" rendered="{!layout.enabledSections['Package Description']}">
            <!-- <apex:outputText value="{!debugString}" escape="false"/>  -->
                <apex:repeat value="{!layout.sectionMap['Package Description'].attributes}" var="attribute">
                    <apex:pageBlockSectionItem rendered="{!attribute.isEditable}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                        <apex:outputLabel styleClass="{!attribute.labelStyleClass}"  for="pfInput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />

                        <apex:inputField id="pfInput" label="" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!wrapper.specificRfqItem['Id']}','{!attribute.onChangeScript}');" value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" styleClass="{!attribute.fieldAPIName} {!attribute.styleClass}"/>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem rendered="{!!attribute.isEditable}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                         <apex:outputLabel for="pfOutput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                         <apex:outputField id="pfOutput"  value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}"/>
                    </apex:pageBlockSectionItem>
                </apex:repeat>

                <!-- Factory Dropdown -->
                
                <apex:pageBlockSectionItem rendered="{!IF(renderFactorySection && isAttributesEditableState, true, false)}">
                <!-- Ashish 02-June-2017 : Salesforce 116 -Add Amkor Preferred picklist value under Factory for RFQI. -->
                <!-- Changed the Label from Factory to Sales Factory -->
                    <apex:outputLabel styleClass="customRequiredField" for="FactoryPl" value=" Sales Factory" />
                        <apex:selectList id="FactoryPl" size="1" value="{!wrapper.specificRfqItem['Factory__c']}" >
                            <apex:selectOptions value="{!salesFactoryOptions}"/>
                        </apex:selectList>
                </apex:pageBlockSectionItem> 
                <apex:outputField value="{!wrapper.specificRfqItem['Factory__c']}" rendered="{!IF(renderFactorySection && !isAttributesEditableState,true,false)}" />
                <!-- Ashish 02-June-2017 : Salesforce 116 -Add Amkor Preferred picklist value under Factory for RFQI. -->
                <apex:outputField value="{!wrapper.rfqItem['Final_Factory__c']}" rendered="{!IF(renderFactorySection,true,false)}" />
                               
            </apex:pageBlockSection>
            
 
            <!-- CPN Drivers Section -->
            <apex:pageBlockSection title="CPN Drivers" columns="{!layout.salesColumns}" rendered="{!layout.enabledSections['CPN Drivers']}">
                <apex:repeat value="{!layout.sectionMap['CPN Drivers'].attributes}" var="attribute">
                    <apex:pageBlockSectionItem rendered="{!attribute.isEditable}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                        <apex:outputLabel for="pfInput" styleClass="{!attribute.labelStyleClass}" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                        <apex:inputField id="pfInput" label="" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!wrapper.specificRfqItem['Id']}');" value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" styleClass="{!attribute.styleClass}"/>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem rendered="{!!attribute.isEditable}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                         <apex:outputLabel for="pfOutput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                         <apex:outputField id="pfOutput"  value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}"/>
                    </apex:pageBlockSectionItem>
                </apex:repeat>
            </apex:pageBlockSection>

            <!-- Substrate Section -->
            <apex:outputPanel layout="block" styleClass="oneColumnHack">
            <apex:pageBlockSection id="substrateSection"  title="Substrate Description" columns="{!layout.salesColumns}" rendered="{!layout.enabledSections['Substrate Description'] }">
                <apex:outputField value="{!wrapper.rfqItem.Consigned__c}" rendered="{!!isAttributesEditableState}"/>
                <!-- Bharat 26-June-2017 : Salesforce 139 -Cavity MEMS Sales RFQ Item Create screens. -->
                <!-- Consigned field not required in substrate description section for package family MEMS -->
                <apex:inputField value="{!wrapper.rfqItem.Consigned__c}" rendered="{!isAttributesEditableState && wrapper.packageFamily.Name!='MEMS'}">
                    <apex:actionSupport event="onchange" rerender="substrateSection"/> 
                </apex:inputField>
                <apex:repeat value="{!layout.sectionMap['Substrate Description'].attributes}" var="attribute">
                <apex:pageBlockSectionItem rendered="{!attribute.isEditable && CanEditFlipChipSubstrate}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                <apex:outputLabel for="pfInput" styleClass="{!attribute.labelStyleClass}" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" /> 
                <apex:inputField id="pfInput" label="" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!wrapper.specificRfqItem['Id']}');" value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" styleClass="{!attribute.styleClass}"/> 
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem rendered="{!!attribute.isEditable || !CanEditFlipChipSubstrate}">
                         <apex:outputLabel for="pfOutput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                         <apex:outputField id="pfOutput"  value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}"/>
                    </apex:pageBlockSectionItem>
                </apex:repeat>
            </apex:pageBlockSection>
            </apex:outputPanel>

            <!-- Wire Description Section -->
            <apex:pageBlockSection title="Wire Description" id="wireSection" columns="1" rendered="{!layout.enabledSections['Wire Description'] }">
                <!-- //Abhay 17-Jul-17 : SF-244 : Wire and Die config fields, must carry at least one[Using the variable wireSectionError for handling the error message(Label.RFQ_ERR_0001) and for rendering the wire section based on the rendered attribute condition].-->
                <apex:pageMessage summary="{!wireSectionError}" severity="error" rendered="{!wireSectionError != null}"/>
                <apex:repeat value="{!wrapper.wireConfigurations}"  var="dataBinding">    
                    <apex:pageBlockSection columns="{!layout.salesColumns}">
                        <!-- <apex:repeat value="{!layout.sectionMap['Wire Description'].attributes}" var="attribute"> -->
                         <apex:repeat value="{!wrapper.childObjectSections[dataBinding.Id].attributes}" var="attribute"> 
                            <apex:pageBlockSectionItem rendered="{!isAttributesEditableState}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                                <apex:outputLabel for="pfInput" styleClass="{!attribute.labelStyleClass}" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                                <apex:inputField id="pfInput" label="" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!dataBinding['Id']}');" value="{!dataBinding[attribute.fieldAPIName]}" styleClass=" {!attribute.fieldAPIName} {!attribute.styleClass}"/>
                            </apex:pageBlockSectionItem>
                            <apex:pageBlockSectionItem rendered="{!!isAttributesEditableState}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                                <apex:outputLabel for="pfOutput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                                <apex:outputField id="pfOutput"  value="{!dataBinding[attribute.fieldAPIName]}"/>
                            </apex:pageBlockSectionItem>
                        </apex:repeat>
                    </apex:pageBlockSection>  
                    <apex:pageBlockSection columns="2">
                         <apex:commandLink id="removeWireConfLink" value="Remove Wire Configuration" action="{!removeWireConfigurationById}" reRender="wireSection" onclick="showProgress();" oncomplete="hideProgress();" styleClass="wireDieLinks" rendered="{!isAttributesEditableState}" >
                             <apex:param name="wireConfigId" value="{!dataBinding.Id}"/>
                         </apex:commandLink>
                         <apex:commandLink id="saveWireConfLink" value="Recalculate Wire Lengths" action="{!saveWireConfigurationById}" reRender="wireSection, multiVolume" onclick="showProgress();" oncomplete="hideProgress();" styleClass="wireDieLinks">
                            <apex:param name="saveWireConfigId" value="{!dataBinding.Id}"/>
                         </apex:commandLink>
                    </apex:pageBlockSection>
                </apex:repeat>
           </apex:pageBlockSection>
   
            <apex:pageBlockSection showHeader="false" columns="2" id="wireCommandPbs" rendered="{!layout.enabledSections['Wire Description'] && isAttributesEditableState}">
                <apex:commandButton value="Add Wire Configuration" action="{!addWireConfiguration}" reRender="wireSection,messages" onclick="showProgress();" oncomplete="hideProgress();"/>
            </apex:pageBlockSection>
            
            <!-- Die Description -->
            <apex:pageBlockSection title="Die Description" id="dieSection" columns="1" rendered="{!layout.enabledSections['Die Description']}" >  
                <!-- //Abhay 17-Jul-17 : SF-244 : Wire and Die config fields, must carry at least one[Using the variable dieSectionError for handling the error message(Label.RFQ_ERR_00012) and for rendering the Die section based on the rendered attribute condition].-->
                <apex:pageMessage summary="{!dieSectionError}" severity="error" rendered="{!dieSectionError != null}" />
                <apex:pageMessage summary="{!dieConfigMessage}" severity="info"/>  
                <apex:repeat value="{!wrapper.dieConfigurations}"  var="dataBinding">    
                     <apex:pageBlockSection id="innerDie" columns="{!layout.salesColumns}">
                        <!--  <apex:repeat value="{!layout.sectionMap['Die Description'].attributes}" var="attribute"> -->
                         <apex:repeat value="{!wrapper.childObjectSections[dataBinding.Id].attributes}" var="attribute"> 
                             <apex:pageBlockSectionItem rendered="{!isAttributesEditableState}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                                <apex:outputLabel for="pfInput" styleClass="{!attribute.labelStyleClass}" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                                <apex:inputField id="pfInput" label="" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!dataBinding['Id']}');" value="{!dataBinding[attribute.fieldAPIName]}" styleClass="{!attribute.styleClass}"/>
                            </apex:pageBlockSectionItem>
                            <apex:pageBlockSectionItem rendered="{!!isAttributesEditableState}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                                <apex:outputLabel for="pfOutput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                                <apex:outputField id="pfOutput"  value="{!dataBinding[attribute.fieldAPIName]}"/>
                            </apex:pageBlockSectionItem>
                         </apex:repeat>
                     </apex:pageBlockSection> 
                     <apex:commandLink id="removeDieLink" value="Remove Die Configuration" action="{!removeDieConfigurationById}" reRender="dieSection" onclick="showProgress();" oncomplete="hideProgress();" rendered="{!isAttributesEditableState}">
                        <apex:param name="dieConfigId" value="{!dataBinding.Id}"/>
                    </apex:commandLink>
                </apex:repeat>               
            </apex:pageBlockSection> 
            <apex:pageBlockSection showHeader="false" columns="2" id="dieCommandPbs" rendered="{!layout.enabledSections['Die Description'] && isAttributesEditableState}">
                <apex:commandButton value="Add Die Configuration" action="{!addDieConfiguration}" reRender="dieSection,messages" onclick="showProgress();" oncomplete="hideProgress();"/>    
            </apex:pageBlockSection>
            
            <!-- Passive Description -->
            <!-- Bharat 24-April-2017 : Salesforce 139 -Cavity MEMS Sales RFQ Item Create screens. -->
            <!-- PageBlockSection title is made dynamic -->
            <apex:pageBlockSection title="{!sectionTitle}" id="passiveSection" columns="1" rendered="{!layout.enabledSections['Passive Description'] }" >  
                <apex:repeat value="{!wrapper.passiveConfigurations}"  var="dataBinding">    
                     <apex:pageBlockSection id="innerDie" columns="{!layout.salesColumns}">
                       <!--  <apex:repeat value="{!layout.sectionMap['Passive Description'].attributes}" var="attribute">  -->
                         <apex:repeat value="{!wrapper.childObjectSections[dataBinding.Id].attributes}" var="attribute"> 
                            <apex:pageBlockSectionItem rendered="{!isAttributesEditableState}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                                <apex:outputLabel for="pfInput" styleClass="{!attribute.labelStyleClass}" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                                <apex:inputField id="pfInput" label="" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!dataBinding['Id']}');" value="{!dataBinding[attribute.fieldAPIName]}" styleClass="{!attribute.styleClass}"/>
                            </apex:pageBlockSectionItem>
                            <apex:pageBlockSectionItem rendered="{!!isAttributesEditableState}">
                                <apex:outputLabel for="pfOutput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                                <apex:outputField id="pfOutput"  value="{!dataBinding[attribute.fieldAPIName]}"/>
                            </apex:pageBlockSectionItem>
                         </apex:repeat>
                     </apex:pageBlockSection> 
                     <apex:commandLink id="removePassiveLink" value="{!passiveSectionLink}" action="{!removePassiveConfigurationById}" reRender="passiveSection" onclick="showProgress();" oncomplete="hideProgress();" rendered="{!isAttributesEditableState}">
                        <apex:param name="passiveConfigId" value="{!dataBinding.Id}"/>
                    </apex:commandLink>
                </apex:repeat>               
            </apex:pageBlockSection> 
            <apex:pageBlockSection showHeader="false" columns="2" id="passiveCommandPbs" rendered="{!layout.enabledSections['Passive Description'] && isAttributesEditableState}">
                <apex:commandButton value="{!passiveSectionButton}" action="{!addPassiveConfiguration}" reRender="passiveSection,messages" onclick="showProgress();" oncomplete="hideProgress();"/>    
            </apex:pageBlockSection>
            
            <!-- Insertion Description -->

            <apex:pageBlockSection title="Test Configuration Summary" id="insertionSection" columns="1" rendered="{!layout.enabledSections['Insertion Description'] && !PostTestServiceOnlyTestType}" >  
                <apex:repeat value="{!wrapper.wpInsertConfs}"  var="dataBinding">
                <apex:pageBlockSection columns="1" title="Test Configuration Detail #{!dataBinding.index}">

                <apex:pageBlockSection id="plantInformation" columns="{!layout.salesColumns}" >
                         <!-- <apex:repeat value="{!layout.sectionMap['Insertion Description'].attributes}" var="attribute"> -->
                          <apex:repeat value="{!wrapper.childObjectSections[dataBinding.conf.Id].attributes}" var="attribute" >
                                 <apex:pageBlockSectionItem rendered="{!isAttributesEditableState && attribute.belongsToSubSection == 'Plant Information' && attribute.isEditable}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                                    <apex:outputLabel for="pfInput" styleClass="{!attribute.labelStyleClass}" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                                    <apex:inputField id="pfInput" label="" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!dataBinding.conf['Id']}');" value="{!dataBinding.conf[attribute.fieldAPIName]}" styleClass="{!attribute.styleClass}"/>
                                </apex:pageBlockSectionItem>
                              <apex:pageBlockSectionItem rendered="{!IF((wrapper.packageFamily.Name!='RFQI_TESTS__c'&& (!isAttributesEditableState) && attribute.belongsToSubSection == 'Plant Information') ,true,false)}" >
                                    <apex:outputLabel for="pfOutput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}"  />
                                    <apex:outputField id="pfOutput"  value="{!dataBinding.conf[attribute.fieldAPIName]}"/>
                                </apex:pageBlockSectionItem> 
                                <apex:pageBlockSectionItem rendered="{!IF((wrapper.packageFamily.Name!='RFQI_TESTS__c'&& (!isAttributesEditableState) && attribute.belongsToSubSection == 'Plant Information') ,true,false)}">
                                    <apex:outputLabel for="pfOutput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                                    <apex:outputField id="pfOutput"  value="{!dataBinding.conf[attribute.fieldAPIName]}"/>
                                </apex:pageBlockSectionItem> 
                         </apex:repeat>
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="" />
                            <apex:outputText value=""/>
                        </apex:pageBlockSectionItem>
                     </apex:pageBlockSection>

                     <hr/>     

                     <apex:pageBlockSection id="testerInformation" columns="{!layout.salesColumns}">
                         <!-- <apex:repeat value="{!layout.sectionMap['Insertion Description'].attributes}" var="attribute"> -->
                          <apex:repeat value="{!wrapper.childObjectSections[dataBinding.conf.Id].attributes}" var="attribute">
                                 <apex:pageBlockSectionItem rendered="{!isAttributesEditableState && attribute.belongsToSubSection == 'Tester Information'}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                                    <apex:outputLabel for="pfInput" styleClass="{!attribute.labelStyleClass}" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                                    <apex:inputField id="pfInput" label="" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!dataBinding.conf['Id']}');" value="{!dataBinding.conf[attribute.fieldAPIName]}" styleClass="{!attribute.styleClass}"/>
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!!isAttributesEditableState}">
                                    <apex:outputLabel for="pfOutput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                                    <apex:outputField id="pfOutput"  value="{!dataBinding.conf[attribute.fieldAPIName]}"/>
                                </apex:pageBlockSectionItem>
                         </apex:repeat>
                     </apex:pageBlockSection>

                     <hr/> 
                      <apex:pageBlockSection id="handlerInformation" columns="{!layout.salesColumns}">
                         <!-- <apex:repeat value="{!layout.sectionMap['Insertion Description'].attributes}" var="attribute"> -->
                          <apex:repeat value="{!wrapper.childObjectSections[dataBinding.conf.Id].attributes}" var="attribute">
                                 <apex:pageBlockSectionItem rendered="{!isAttributesEditableState && attribute.belongsToSubSection == 'Handler Information'}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                                    <apex:outputLabel for="pfInput" styleClass="{!attribute.labelStyleClass}" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                                    <apex:inputField id="pfInput" label="" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!dataBinding.conf['Id']}');" value="{!dataBinding.conf[attribute.fieldAPIName]}" styleClass="{!attribute.styleClass}"/>
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem rendered="{!!isAttributesEditableState}">
                                    <apex:outputLabel for="pfOutput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                                    <apex:outputField id="pfOutput"  value="{!dataBinding.conf[attribute.fieldAPIName]}"/>
                                </apex:pageBlockSectionItem>
                         </apex:repeat>                       
                     </apex:pageBlockSection>

                    <hr/> 

                     <apex:pageBlockSection id="testerConfigSection" columns="{!layout.salesColumns}" rendered="{!layout.enabledSections['Minimum Tester Configuration']}" > 
                            <apex:repeat value="{!layout.sectionMap['Minimum Tester Configuration'].attributes}" var="attribute">
                             <apex:pageBlockSectionItem rendered="{!(isAttributesEditableState || attribute.isEditable)}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                                <apex:outputLabel for="pfInput" styleClass="{!attribute.labelStyleClass}" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                                <apex:inputField id="pfInput" label="" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!dataBinding.conf['Id']}');" value="{!dataBinding.conf[attribute.fieldAPIName]}" styleClass="{!attribute.styleClass}"/>
                            </apex:pageBlockSectionItem>
                            <apex:pageBlockSectionItem rendered="{!!isAttributesEditableState && !attribute.isEditable}">
                                <apex:outputLabel for="pfOutput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                                <apex:outputField id="pfOutput"  value="{!dataBinding.conf[attribute.fieldAPIName]}"/>
                            </apex:pageBlockSectionItem>
                         </apex:repeat>
                    </apex:pageBlockSection>  

                    <apex:commandLink value="Clone Test Configuration" action="{!cloneInsertionConfiguration}" reRender="insertionSection,messages" onclick="showProgress();" oncomplete="hideProgress();" title="Clone the current Test Configuration" rendered="{!wrapper.packageFamily.Name == 'Test'}">
                        <apex:param name="insertionConfigId" value="{!dataBinding.conf.Id}"/>
                    </apex:commandLink>
                     <apex:commandLink id="removeInsertionLink" value="Remove Configuration" action="{!removeInsertionConfigurationById}" reRender="insertionSection, messages" onclick="showProgress();" oncomplete="hideProgress();" rendered="{!isAttributesEditableState}">
                        <apex:param name="insertionConfigId" value="{!dataBinding.conf.Id}"/>
                    </apex:commandLink>
                  </apex:pageBlockSection> 
                </apex:repeat>         
            </apex:pageBlockSection> 

            <apex:pageBlockSection showHeader="false" columns="2" id="insertionCommandPbs" rendered="{!layout.enabledSections['Insertion Description'] && isAttributesEditableState && !PostTestServiceOnlyTestType}">
                <apex:commandButton value="Add Test Configuration" action="{!addInsertionConfiguration}" reRender="insertionSection,messages" onclick="showProgress();" oncomplete="hideProgress();" title="Add tester configurations for each test insertion or wafer reprobe"/>
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="" />
                    <apex:outputText value="" />
                </apex:pageBlockSectionItem>
                <apex:pageMessage summary="{!insertionConfigMessage}" severity="info"/>     
            </apex:pageBlockSection>
            

            <!-- Service Description -->
            <apex:pageBlockSection title="Service Description" id="serviceSection" columns="1" rendered="{!layout.enabledSections['Service Description']}" >  
                <apex:repeat value="{!wrapper.serviceConfigurations}"  var="dataBinding">    
                     <apex:pageBlockSection id="innerDie" columns="{!layout.salesColumns}">
                         <!-- <apex:repeat value="{!layout.sectionMap['Insertion Description'].attributes}" var="attribute"> -->
                          <apex:repeat value="{!wrapper.childObjectSections[dataBinding.Id].attributes}" var="attribute"> 
                             <apex:pageBlockSectionItem rendered="{!isAttributesEditableState}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                                <apex:outputLabel for="pfInput" styleClass="{!attribute.labelStyleClass}" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                                <apex:inputField id="pfInput" label="" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!dataBinding['Id']}');" value="{!dataBinding[attribute.fieldAPIName]}" styleClass="{!attribute.styleClass}"/>
                            </apex:pageBlockSectionItem>
                            <apex:pageBlockSectionItem rendered="{!!isAttributesEditableState}">
                                <apex:outputLabel for="pfOutput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                                <apex:outputField id="pfOutput"  value="{!dataBinding[attribute.fieldAPIName]}"/>
                            </apex:pageBlockSectionItem>
                         </apex:repeat>
                         <apex:outputField value="{!dataBinding['Sub_Total__c']}" rendered="{!ShowPriceToCustomerSave}"/>
                     </apex:pageBlockSection> 
                     <apex:commandLink id="removeServiceLink" value="Remove Service Configuration" action="{!removeServiceConfigurationById}" reRender="serviceSection, messages" onclick="showProgress();" oncomplete="hideProgress();" rendered="{!isAttributesEditableState}">
                        <apex:param name="serviceConfigId" value="{!dataBinding.Id}"/>
                    </apex:commandLink>
                </apex:repeat>               
            </apex:pageBlockSection> 
            <apex:pageBlockSection showHeader="false" columns="2" id="serviceCommandPbs" rendered="{!layout.enabledSections['Service Description'] && isAttributesEditableState}">
                <apex:commandButton value="Add Service Configuration" action="{!addServiceConfiguration}" reRender="serviceSection,messages" onclick="showProgress();" oncomplete="hideProgress();"/>    
            </apex:pageBlockSection>

            <!-- Adders Section -->
            <apex:pageBlockSection title="Adders" columns="{!layout.salesColumns}" rendered="{!layout.enabledSections['Adders']}">
                <apex:repeat value="{!layout.sectionMap['Adders'].attributes}" var="attribute">
                    <apex:pageBlockSectionItem rendered="{!attribute.isEditable}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                        <apex:outputLabel for="pfInput" styleClass="{!attribute.labelStyleClass}" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                        <apex:inputField id="pfInput" label="" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!wrapper.specificRfqItem['Id']}');" value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" styleClass="{!attribute.styleClass}"/>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem rendered="{!!attribute.isEditable}">
                         <apex:outputLabel for="pfOutput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                         <apex:outputField id="pfOutput"  value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}"/>
                    </apex:pageBlockSectionItem>
                </apex:repeat>
            </apex:pageBlockSection>


            <!-- Post Test Services Section -->
            <apex:pageBlockSection title="Post Test Services" columns="1" rendered="{!layout.enabledSections['Post Test Services'] && !IsWaferTestType}">

                <apex:pageBlockSection rendered="{!PostTestServiceOnlyTestType}" columns="{!layout.salesColumns}"> 
                    <apex:inputField value="{!wrapper.specificRfqItem['Post_Test_Factory__c']}" style="float:left;"/>
                    <apex:pageBlockSectionItem >
                            <apex:outputLabel value="" />
                            <apex:outputText value=""/>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="" />
                            <apex:outputText value=""/>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="" />
                            <apex:outputText value=""/>
                        </apex:pageBlockSectionItem>
                </apex:pageBlockSection> 


                <apex:pageBlockSection columns="{!layout.salesColumns}">
                    <apex:repeat value="{!layout.sectionMap['Post Test Services'].attributes}" var="attribute">
                        <apex:pageBlockSectionItem rendered="{!attribute.isEditable}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                            <apex:outputLabel for="pfInput" styleClass="{!attribute.labelStyleClass}" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                            <apex:inputField id="pfInput" label="" onChange="fieldChangeEventHook(false,'{!attribute.fieldAPIName}','{!wrapper.specificRfqItem['Id']}');" value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" styleClass="{!attribute.styleClass}"/>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem rendered="{!!attribute.isEditable}">
                             <apex:outputLabel for="pfOutput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                             <apex:outputField id="pfOutput"  value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}"/>
                        </apex:pageBlockSectionItem>
                    </apex:repeat>
                    </apex:pageBlockSection>
                    <!--Post Test Services Burn In Subsection-->
                    <apex:pageBlockSection columns="{!layout.salesColumns}" rendered="{!layout.enabledSections['Post Test Services Burn In']}">
                        <apex:repeat value="{!layout.sectionMap['Post Test Services Burn In'].attributes}" var="attribute">
                            <apex:pageBlockSectionItem rendered="{!attribute.isEditable}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                            <apex:outputLabel for="pfInput" styleClass="{!attribute.labelStyleClass}" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                            <apex:inputField id="pfInput" label="" onChange="fieldChangeEventHook(false,'{!attribute.fieldAPIName}','{!wrapper.specificRfqItem['Id']}');" value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" styleClass="{!attribute.styleClass}"/>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem rendered="{!!attribute.isEditable}">
                             <apex:outputLabel for="pfOutput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                             <apex:outputField id="pfOutput"  value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}"/>
                        </apex:pageBlockSectionItem>
                        </apex:repeat>
                    </apex:pageBlockSection>
                    <!--Post Test Services Prices Subsection-->
                    <apex:pageBlockSection columns="{!layout.salesColumns}" rendered="{!layout.enabledSections['Post Test Services Prices']}">
                        <apex:repeat value="{!layout.sectionMap['Post Test Services Prices'].attributes}" var="attribute">
                            <apex:pageBlockSectionItem rendered="{!attribute.isEditable}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                            <apex:outputLabel for="pfInput" styleClass="{!attribute.labelStyleClass}" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                            <apex:inputField id="pfInput" label="" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!wrapper.specificRfqItem['Id']}');" value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" styleClass="{!attribute.styleClass}"/>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem rendered="{!!attribute.isEditable}">
                             <apex:outputLabel for="pfOutput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                             <apex:outputField id="pfOutput"  value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}"/>
                        </apex:pageBlockSectionItem>
                        </apex:repeat>
                    </apex:pageBlockSection>
                </apex:pageBlockSection>
                <!-- Post Test Services Section for Wafer Probe ONLY -->
            <apex:pageBlockSection title="Post Test Services" columns="{!layout.salesColumns}" rendered="{!layout.enabledSections['Post Test Services - Wafer Probe'] && IsWaferTestType}">
                    <apex:repeat value="{!layout.sectionMap['Post Test Services - Wafer Probe'].attributes}" var="attribute">
                        <apex:pageBlockSectionItem rendered="{!attribute.isEditable}" helpText="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].inlineHelpText}">
                            <apex:outputLabel for="pfInput" styleClass="{!attribute.labelStyleClass}" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                            <apex:inputField id="pfInput" label="" onChange="fieldChangeEventHook({!attribute.doCallBack},'{!attribute.fieldAPIName}','{!wrapper.specificRfqItem['Id']}');" value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" styleClass="{!attribute.styleClass}"/>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem rendered="{!!attribute.isEditable}">
                             <apex:outputLabel for="pfOutput" value="{!$ObjectType[attribute.objectAPIName].fields[attribute.fieldAPIName].Label}" />
                             <apex:outputField id="pfOutput"  value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}"/>
                        </apex:pageBlockSectionItem>
                    </apex:repeat>
            </apex:pageBlockSection>

            <!-- Post Test Services BU Price to Sales -->
            <!-- AMK-2386 -->
            <apex:pageBlockSection id="ptsCost" title="Post Test Services BU Price to Sales" columns="1" rendered="{!layout.enabledSections['Post Test Services Cost and Price'] && ShowPostTestServiceCostAndPrice}">
                <apex:pageBlockSection columns="{!layout.buColumns}" >               
                    <apex:repeat value="{!layout.sectionMap['Post Test Services Cost and Price'].attributes}" var="attribute">
                        <apex:outputText value="" rendered="{!attribute.isBlank}" />
                        <apex:outputField value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" rendered="{!!attribute.isBlank}"/>
                    </apex:repeat> 
                </apex:pageBlockSection>
                <apex:pageBlockSection rendered="{!PostTestServiceOnlyTestType}" columns="{!layout.salesColumns}"> 
                    <apex:outputText value="{!wrapper.specificRfqItem['BU_Post_Test_Price_Unit__c']}"/>
                    <apex:pageBlockSectionItem >
                        <apex:outputLabel value="" />
                        <apex:outputText value=""/>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                        <apex:outputLabel value="" />
                        <apex:outputText value=""/>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                        <apex:outputLabel value="" />
                        <apex:outputText value=""/>
                    </apex:pageBlockSectionItem>
                </apex:pageBlockSection>
            </apex:pageBlockSection>



            <!-- NRE Section -->
            <apex:outputPanel layout="block" styleClass="oneColumnHack" rendered="{!!isLayoutDeprecated}">
                <apex:pageBlockSection title="NRE" columns="2" >
                    <apex:outputField value="{!wrapper.rfqItem.NRE_Inclusion__c}" />
                </apex:pageBlockSection>

            <apex:pageBlockSection rendered="{!showNREAttributes}" columns="1">

            <apex:pageBlockSection columns="2">
                <apex:outputText value="NRE Description:" style="float:right; font-weight: bold;"/>
                <apex:outputText value="$NRE Value:" style="float:left; font-weight: bold;"/>
            </apex:pageBlockSection>

            <apex:pageBlockSection columns="1" rendered="{!layout.enabledSections['NRE']}">
                <apex:repeat value="{!layout.sectionMap['NRE'].attributes}" var="attribute">
                    <apex:outputField value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}"/>
                </apex:repeat>
            </apex:pageBlockSection>

            <apex:pageBlockSection columns="2">
                <apex:repeat value="{!wrapper.nreConfigurations}"  var="nreConfiguration"> 
                    <apex:outputText value="{!nreConfiguration['Description__c']}" style="float:right;"  label=""/>
                    <apex:outputText value="{!nreConfiguration['Price_New__c']}" style="float:left;"  label=""/>
                </apex:repeat>
            </apex:pageBlockSection>

            </apex:pageBlockSection>
        </apex:outputPanel>

        <apex:pageBlockSection title="Additional Information" rendered="{!layout.enabledSections['Additional Information'] && !isLayoutDeprecated}" columns="1">
            <apex:repeat value="{!layout.sectionMap['Additional Information'].attributes}" var="attribute">
                <apex:outputText value="{!wrapper.specificRfqItem[attribute.fieldAPIName]}" label=""/>
            </apex:repeat>
        </apex:pageBlockSection>

            <!-- Deprecated Fields -->
            <c:RFQIDeprecatedSectionEditPage wrapper="{!wrapper}" theLayout="{!layout}" renderFactorySection="{!renderFactorySection}" columns="1" salesPage="true" rendered="{!isLayoutDeprecated}"/>

            <apex:pageBlockSection title="Additonal Business Considerations" columns="{!layout.salesColumns}" rendered="true">
            </apex:pageBlockSection>

           <apex:actionFunction name="onDefaultDriverChange" action="{!onDefaultDriverChange}" reRender="output, messages" oncomplete="hideProgress();">
                <apex:param name="fieldName" value="" />
                <apex:param name="objectId" value="" />
           </apex:actionFunction>
           
           <apex:actionFunction name="onFactoryControllerFieldChange" action="{!refreshFactory}" reRender="output">
                <apex:param name="fieldName" value="" />
                <apex:param name="objectId" value="" />
           </apex:actionFunction>
       
       </apex:outputPanel>
             
    </apex:pageblock>

</apex:form>
</apex:page>